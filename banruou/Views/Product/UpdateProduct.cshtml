@model banruou.ViewModel.InsertProjectViewModel
@{ ViewBag.Title = "Cập nhật sản phẩm";
                Layout = "~/Views/Shared/_AdminLayout.cshtml"; }
<h2>Cập nhật sản phẩm</h2>
<a class="btn quick-link" href="@Url.Action("ListProduct")"><i class="far fa-list mr-1"></i> Danh sách dự án</a>
<div class="box_content">
    @using (Html.BeginForm("UpdateProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
@Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Product.Id)
    <table class="form_table">
        <tr>
            <td class="form_name">@Html.LabelFor(model => model.Product.ProductCategoryId)</td>
            <td class="form_text">
                <select name="CategoryId" class="form_control w300" required="">
                    <option value="">Danh mục sản phẩm</option>
                    @foreach (var category in Model.Categories.Where(a => a.ParentId == null))
                    {
    <option value="@category.Id" @if (category.Id == Model.Product.ProductCategoryId) { @Html.Raw("selected='selected'") }>@category.CategoryName</option> foreach (var child in Model.Categories.Where(a => a.ParentId == category.Id))
                        {
    <option value="@child.Id" @if (child.Id == Model.Product.ProductCategoryId) { @Html.Raw("selected='selected'") }> -- @child.CategoryName</option>}
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td class="form_name">@Html.LabelFor(model => model.Product.Name)</td>
            <td class="form_text">@Html.EditorFor(model => model.Product.Name)</td>
        </tr>
        <tr>
            <td class="form_name">@Html.LabelFor(model => model.Product.Image)</td>
            <td class="form_text">@Html.TextBoxFor(model => model.Product.Image, new { type = "file" }) <span class="red-warring">Chấp nhận ảnh jpg, png, gif, jpeg < 40MB</span></td>
        </tr>
        @if (Model.Product.Image != null)
        {
    <tr>
        <td class="form_name"></td>
        <td class="form_text"><img class="img-border" src="@Path.Combine("/images/Product/" , Model.Product.Image)" /></td>
    </tr>}
        <tr>
            <td class="form_name">@Html.LabelFor(model => model.Product.Price)</td>
            <td class="form_text">@Html.EditorFor(model => model.Product.Price)</td>
        </tr>
        <tr>
            <td class="form_name">@Html.LabelFor(model => model.Product.Country)</td>
            <td class="form_text">@Html.EditorFor(model => model.Product.Country)</td>
        </tr>
        <tr>
            <td class="form_name">@Html.LabelFor(model => model.Product.Application)</td>
            <td class="form_text">@Html.EditorFor(model => model.Product.Application)</td>
        <tr>
            <td class="form_name">@Html.LabelFor(model => model.Product.Capacity)</td>
            <td class="form_text">@Html.EditorFor(model => model.Product.Capacity)</td>
        </tr>
        <tr>
            <td class="form_name">@Html.LabelFor(model => model.Product.Material)</td>
            <td class="form_text">@Html.EditorFor(model => model.Product.Material)</td>
        </tr>
        <tr>
            <td class="form_name">@Html.LabelFor(model => model.Product.Body)</td>
            <td class="form_text">@Html.EditorFor(model => model.Product.Body)</td>
        </tr>
        <tr>
            <td class="form_name">@Html.LabelFor(model => model.Product.Url)</td>
            <td class="form_text">@Html.EditorFor(model => model.Product.Url)</td>
        </tr>
        <tr>
            <td class="form_name">@Html.LabelFor(model => model.Product.Home)</td>
            <td class="form_text">@Html.CheckBoxFor(model => model.Product.Home)</td>
        </tr>
        <tr>
            <td class="form_name">@Html.LabelFor(model => model.Product.Active)</td>
            <td class="form_text">@Html.CheckBoxFor(model => model.Product.Active, new { @checked = "checked" })</td>
        </tr>
        <tr>
            <td class="form_name">@Html.LabelFor(model => model.Product.Hot)</td>
            <td class="form_text">@Html.CheckBoxFor(model => model.Product.Hot , new { @checked = "checked" })</td>
        </tr>
        <tr>
            <td class="form_name">@Html.LabelFor(model => model.Product.Sort)</td>
            <td class="form_text">@Html.EditorFor(model => model.Product.Sort)</td>
        </tr>
        <tr>
            <td class="form_name">@Html.LabelFor(model => model.Product.TitleMeta)</td>
            <td class="form_text">@Html.EditorFor(model => model.Product.TitleMeta)</td>
        </tr>
        <tr>
            <td class="form_name">@Html.LabelFor(model => model.Product.DescriptionMeta)</td>
            <td class="form_text">@Html.EditorFor(model => model.Product.DescriptionMeta)</td>
        </tr>
        <tr>
            <td class="form_name"></td>
            <td class="form_text">
                <input type="submit" class="btn quick-link" value="Cập nhật" />
            </td>
        </tr>
    </table>}
</div>
@section scripts{
    <script>$(function () {
            $("#ListImages").sortable();
            $("#ListImages").disableSelection();

            $(".tags-wrapper ul").sortable();
            $(".tags-wrapper ul").disableSelection();
        });
        var i = 1;
        $("#fileupload").fileupload({
            add: function (e, data) {
                var uploadErrors = [];
                var acceptFileTypes = /^image\/(gif|jpe?g|png)$/i;
                if (data.originalFiles[0]["type"].length && !acceptFileTypes.test(data.originalFiles[0]["type"])) {
                    uploadErrors.push("Chỉ chấp nhận định dạng jpeg, jpg, png, gif");
                }
                if (data.originalFiles[0]["size"] > 4000000) {
                    uploadErrors.push("Dung lượng ảnh lớn hơn 4MB");
                }
                var totalImg = $("#ListImages .thumb-img-box").length;
                if (totalImg >= 10) {
                    uploadErrors.push("Chỉ đăng tối đa 10 ảnh");
                }
                if (uploadErrors.length > 0) {
                    alert(uploadErrors.join("\n"));
                    return false;
                } else {
                    data.submit();
                }
                return true;
            },
            url: "/Uploader/Upload?folder=projects&r=" + Math.random(),
            dataType: "json",
            done: function (e, data) {
                $.each(data.result.files, function (index, file) {
                    $('#ListImages').append('<li><input type="hidden" name="Pictures" value ="' + file.name + '" /><img src="/images/projects/' + file.name + '?w=80&h=80"/><a href="javascript:;" id="' + i + '" onclick="delfile(' + i + ')"><img src="/content/admin/icon-delete.png" alt="" style="vertical-align:middle" /></a></li>');
                });
                i = i + 1;
                $("#progress").fadeOut(2000);
            },
            start: function () {
                $("#progress .progress-bar").css("width", "0");
                $("#progress").show();
            },
            progressall: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $("#progress .progress-bar").css("width", progress + "%");
            }
        }).prop('disabled', !$.support.fileInput).parent().addClass($.support.fileInput ? undefined : 'disabled');

        function delfile(divid) {
            if (confirm('Bạn có chắc xóa ảnh này?')) {
                $('#' + divid).parent().fadeOut().remove();
            }
        }


        function loadChildCategory(id) {
            $.getJSON("/ProjectVcms/GetChildCategory", { parentId: id }, function (data) {
                var items = [];
                items.push("<option value>Hãy chọn danh mục</option>");
                $.each(data, function (key, val) {
                    items.push("<option value='" + val.Id + "'>" + val.CategoryName + "</option>");
                });
                $("#ChildCategoryId").html(items.join(""));
            });
        }</script>
}
